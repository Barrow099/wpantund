#!/bin/sh
#
# Copyright (c) 2016 Nest Labs, Inc.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


die() {
	echo " *** Fatal error: $*"
	exit -1
}

set -x

REF="$1"

[ -n "$REF" ] || die "missing argument (needs a ref)"

BASE="$2"


[ -n "$BASE" ] || BASE=`git rev-parse --verify "autoconf/${REF}"`
[ -n "$BASE" ] || BASE=`git rev-parse --verify "autoconf/master"`
[ -n "$BASE" ] || die "Can't find BASE"

FULL="$3"

[ -n "$FULL" ] || FULL=`git rev-parse --verify "full/${REF}"`
[ -n "$FULL" ] || FULL="full/${REF}"

[ -d proj ] && { chmod -R 777 proj && rm -fr proj ; }

git clone .git proj || die

cd proj || die

git checkout "${REF}" || die

REV=`git describe --tags --always`

./bootstrap.sh --all || die

find . -name autom4te.cache -print0 | xargs -0 rm -fr || die

git add . -f || die
git stash || die
git checkout "${BASE}" || git checkout --orphan "${BASE}" || die
git rm . -f -r
git stash pop || die

if git status --porcelain 2>/dev/null | grep -e '^[RMDA]' -e '^?[RDMA]' >/dev/null
then
	git commit -m "build-system: Autotools rebuild from $REV

Based-on: `git rev-parse $REV`" || die
else
	echo "No changes."
fi

git push -f origin "${BASE}":refs/heads/__AUTOCONF_HEAD || die

COMMIT_LOG="build-system: Merge of changes for $REV

Based-on: `git rev-parse $REV`"

if git checkout "${FULL}"
then
	git merge --allow-unrelated-histories -m "${COMMIT_LOG}" ${REF} ${BASE} || {
		git status --porcelain | grep '^UU' || die "Can't resolve merge"
		git status --porcelain | grep '^UU' | awk '{print $2}' | xargs -n 1 git checkout "${REF}"
		git status --porcelain | grep '^UU' | awk '{print $2}' | xargs -n 1 git checkout "${BASE}"
		git commit -m "${COMMIT_LOG}" || die
	}
else
	git checkout -B "${FULL}" "${REF}"
	git merge --allow-unrelated-histories -m "${COMMIT_LOG}" || die
fi

git push -f origin "${FULL}":refs/heads/__FULL_HEAD || die

cd .. || die

rm -fr proj || die

